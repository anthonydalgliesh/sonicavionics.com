{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is the Sonic Avionics documentation and blog.</p> <p>Sonic Avionics is a research organization that focuses on avionics systems. We will create open source non profit avionincs sytems for use in high powered rocketry.</p> Current Sensors Module 0.1.0 Schematic 4\" Avionics CAD Power Module 0.0.2"},{"location":"avionics/","title":"4\" Avionics","text":"<p>Avionics for a 4 inch rocket</p> December 1st: Power Board 0.0.2 December 19st: Power Board 0.0.2 December 7th: Avionics bay"},{"location":"avionics/#initial-requirements-and-design-goals","title":"Initial Requirements and Design Goals","text":"<p>The primary goal of the 4 inch avionics is to enable my personal learning. This will be the first board of many. This wil be a CAN enabled system in a 4-inch diameter form factor.</p>"},{"location":"avionics/#primary-functional-requirements-for-4-inch-avionics","title":"Primary Functional Requirements for 4 inch avionics:","text":"<ul> <li>Easy to operate and understand</li> <li>Don't be janky</li> <li>Fully open source</li> <li>Assemblable by JLCPCB PCBA</li> <li>Utilize all known best practices to enable scalability</li> </ul>"},{"location":"avionics/#secondary-functional-requirements-for-4-inch-avionics","title":"Secondary Functional Requirements for 4 inch avionics:","text":"<ul> <li>Battery charger with quick disconnect using magnetic connector.</li> <li>Remove before flight banana pins for ejection charges</li> <li>Point of load regulation</li> </ul> <p>Here's the link to the project repo with the Solidworks and Altium files.</p>"},{"location":"avionics/#things-for-the-next-board","title":"Things for the next board","text":"<ul> <li>USB multiplexer controlled by something like a raspberry pi zero. The backplate will have the MUX. There will also be the ability to digitally reboot things. We can remove all usb ports except for on the rp zero.</li> <li>programmable Power mux to be able to reboot anything remotely </li> <li>Ethernet</li> <li>2.4 GHz for camera transmission</li> <li>Usb protection IC</li> </ul> <p>For now we still have to figure out CAN</p>"},{"location":"avionics/#video-references","title":"Video references","text":"<p>Good videos:</p> <ul> <li> <p>Altium Designer Quick-Start Tutorial with Phil Salmony from Phil's Lab</p> </li> <li> <p>Raspberry Pi RP2040 Hardware Design | Altium Designer | JLCPCB - Phil's Lab #28</p> </li> <li> <p>How To Keep Components Connected When Moving | Altium Designer</p> </li> <li> <p>Microcontroller-Based Hardware Design With Altium Designer - #3 USB C</p> </li> <li> <p>ECAD-MCAD CoDesign with Altium 365 &amp; SOLIDWORKS</p> </li> <li> <p>Types of PCB Grounding Explained | PCB Layout</p> </li> <li> <p>Impedance Explained.</p> </li> </ul>"},{"location":"avionics/#open-source","title":"Open source","text":"<p>The student rocketry community is quite open to sharing ideas. This makes it easier for new student teams such as my own to build themselves up. The goal is to have a thriving space industry. The bottom line is that the more people we have that are knowledgeable in rocketry the better chance humanity has. This is largely the philosophy the rocketry teams I've spoken to have. We stand on the shoulders of giants. It is unfeasible to donate to every single open source project you gain knowledge from, so the least we can do is to contribute back the the community by open sourcing everything we do. We have everything to gain from the success of others. Open source doesn't mean copying others stuff, and being a free loader. We strive to learn from and contribute to each step of the process.</p>"},{"location":"avionics/#inspiration","title":"Inspiration","text":"<p>I've been inspired by rocketry teams such as Waterloo, Queens, Etes, and Oronos. Waterloo is extremely helpful due to all of their documentation being public on their website. I've visited Queens a few times and they are always okay with sharing info. Without these two teams, Sonic Avionics' success would be a lot harder.</p>"},{"location":"avionics/#can-bus","title":"CAN bus","text":"<p>Every team settles on CAN bus. I have no experience with it, but I will be implementing it on the 4 inch avionics.</p>"},{"location":"avionics/#modularity-with-pcie-connectors","title":"Modularity with PCIe connectors","text":"<p>The modular system I first noticed at LC 2023. Etes showed me their system. I noticed Queens also did it, then I noticed Oronos did it. It seems like an obvious place to start, I mean it makes things really easy and elegant. The downside is that its not as structurally robust as Waterloos RocketCAN system.</p> \u00c9TS Anirniq QRET ORONOS"},{"location":"avionics/#battery","title":"Battery","text":"<p>For the SRAD board we will be using a SRAD battery back and the opposite is true for the COTS stuff. For the first launch it will be a 2s 2p pack inspired by this video.</p>"},{"location":"avionics/cots/","title":"Cots Stuff","text":"<p>The flight computer needs to have redundant consumer off the shelf altitude measurement. Not sure if the COTS GPS is required or suggested.</p>"},{"location":"avionics/cots/#cots-components","title":"COTS Components","text":"<p>GPS</p> <ul> <li>Featherweight 915 MHz</li> <li>BigRedBee COTS GPS</li> </ul>"},{"location":"avionics/cad/cad/","title":"CAD","text":"<p>This is the page to describe the avionics bay CAD.</p> <p>Version 1: </p> <p>Version 2: </p> <p></p> <p>There's just barely enough space to fit the RFD900 on a module. so why not? The challenge is to see if I can print these over hangs now. Gonna be testing today.</p>"},{"location":"avionics/cad/cad/#bulkheads","title":"Bulkheads","text":"<p>The lower and upper bulk head should be the exact same. The inner diameter between the liquid and solid rocket wont change too much.</p> <p>Tube for solid O.D.: 4.024. I.D.: 3.9, Thickness: 0.062 </p> <p>Liquid</p>"},{"location":"avionics/cad/cad/#rack","title":"rack","text":"<p>The rack will use these threaded inserts</p>"},{"location":"avionics/modules/backplate/","title":"Backplate","text":""},{"location":"avionics/modules/backplate/#characteristic-impedance","title":"Characteristic Impedance","text":"<p>The characteristic impedance should be 120 ohms. The bus should also have two 120 ohm resistors at either end.</p> <p>I need to know if I can fit my traces between these pins or if I need to use more pins for each net. Gonna be using a 4 layer PCB with a stack up of Signal GND Power Signal</p> <p></p>"},{"location":"avionics/modules/backplate/#calculating-impedance","title":"Calculating Impedance","text":""},{"location":"avionics/modules/backplate/#by-hand","title":"By hand","text":"<p>Gonna come back to this</p> <p>discussion on stack exchange </p>"},{"location":"avionics/modules/backplate/#jlcpcb-calculator","title":"JLCPCB Calculator","text":"<p>Calculator If around 0.1148mm is right, then I'll be able to route between the PCIe pins just fine. </p> <p></p>"},{"location":"avionics/modules/backplate/#links","title":"Links","text":"<p>pcie socket</p> <p>banana socket order an extra 5/16-32 nut with this</p> <p>cad from here</p> <p>banana plug</p> <p>step file from this website</p> <p>High-Speed Layout Guidelines for Reducing EMI for LVDS SerDes Designs</p> <p>Critical Spacing of CAN Bus Connections</p>"},{"location":"avionics/modules/backplate/#videos","title":"Videos","text":"<ul> <li>KiCad Controlled Impedance Traces (e.g. 50\u03a9) - Phil's Lab #3</li> <li>What Are Differential Pairs? </li> <li>When Does a Trace Act Like a Transmission Line?</li> </ul>"},{"location":"avionics/modules/chute/","title":"Recovery","text":"<p>This board will be in charge of checking continuity, and arming the ejection charges. it will report on tall this over the CAN network. It will also have it's own barometer for independency. We will be able to turn on or off automatic ejection. If the rocket target altitude is lower than expected, the sensor board will alert us, and the </p> <p>There will be remove before flight tags in the form of banana connectors with a tag on it  </p> <p>The above will disable a relay by shorting the enable pin.</p>"},{"location":"avionics/modules/gps/","title":"GPS","text":"<p>Currently thinking about going with the MAX-M10S-00B. Going to use an external antenna. Sparkfun wrote a library for it. slightly more expensive than L86-M33 and cheaper than blox m10q. Doesn't have internal antenna though</p> <p>NEO-F10N is too expensive, but it does L1/L5 and connects to all the constellations. Anyways this is a easily solvable problem for a later time.</p>"},{"location":"avionics/modules/sensors/","title":"Sensors","text":""},{"location":"avionics/modules/sensors/#chips","title":"Chips","text":"<ul> <li> <p>MCU</p> <ul> <li> <p>MCU RP 2040</p> </li> <li> <p>Flash W25Q128JVP</p> </li> <li> <p>MCU Crystal ABM8-272-T3</p> </li> </ul> </li> <li> <p>USB-C JLC USB-C port</p> </li> <li> <p>Momentary Button TS-1187A-B-A-B</p> </li> <li> <p>Sensors</p> <ul> <li> <p>IMU BNO055</p> <ul> <li>IMU Crystal ABS07-32.768KHZ-T</li> </ul> </li> <li> <p>Altimeter BMP388</p> </li> </ul> </li> <li> <p>CAN Controller and transceiver</p> <ul> <li>CAN chip crystal X322516MLB4SI</li> </ul> </li> </ul>"},{"location":"avionics/modules/sensors/#notes-about-chips","title":"Notes about chips","text":""},{"location":"avionics/modules/sensors/#33v-buck","title":"3.3v buck","text":"<p>For the 3.3v buck it called for a 22.1k\u03a9 resistor for R_FBB.   22k\u03a9 is a standard resistor. So changing that to 22 will change the output voltage a tad.</p> <p>For the resistor divider:</p> <p>Starting from:</p> \\[ V_{\\text{FB}} = V_{\\text{OUT}} \\left( 1 - \\frac{R_{\\text{FBT}}}{R_{\\text{FBB}} + R_{\\text{FBT}}} \\right) \\] <p>Solving for V_OUT:</p> \\[ V_{\\text{OUT}} = V_{\\text{FB}} \\cdot \\frac{R_{\\text{FBB}} + R_{\\text{FBT}}}{R_{\\text{FBB}}}. \\] <p>Subbing in the values:</p> \\[ V_{\\text{FB}} = 0.6, \\quad R_{\\text{FBT}} = 100K, \\quad R_{\\text{FBB}} = 22K \\] \\[ V_{\\text{OUT}} = 3.327273 \\] <p>The voltage ranges for all the chips are as follows</p> <ul> <li>RP2040: -0.5 to 3.63</li> <li>Flash: 2.7 to 3.6</li> <li>CAN controller: 2.6 to 5.5</li> <li>IMU: -0.3 to 3.6</li> <li>Altimeter: -0.3 to 3.8</li> </ul> <p>Running the system at 3.33 volts will be fine, and it will save a lot of money or time.</p>"},{"location":"avionics/modules/sensors/#point-of-load-vs-bus-regulation","title":"Point of Load vs Bus Regulation","text":"<p>Point of load regulation is where your power bus is lets say 7.4 volts, and all your chips are 5v so you regulate the voltage near each chip. Bus regulation would be having the bus 5v. </p> <p>Point of load means multiple regulators at each load, but inherently less stable.  If you can get away without having to do point of load regulation you could save a lot of money though.</p> <p>To reduce costs, both the 5v and the 3.3v regulators will be deleted from the modules, in favour of regulated bus power. Before the power module is ready however, we will need a very basic 2 slot PCIe connector that can supply 5v to the board.</p> <p>I'll save around $375 buy not doing point of load. Delete the two regs and mux, that gets rid of 5 extended JLCPCB parts. It costs $3 per extended part. The minimum order number is 5 (actually 2 but I'd wanna do 5). There will be 5 modules. 5 * 3 * 5 * 5 = 375.</p>"},{"location":"avionics/modules/sensors/#usb-impedance-matching","title":"USB Impedance matching:","text":"<p>From the RP2040 hardware design guide <pre><code>Even though RP2040 is limited to full speed data rate (12Mbps), we should try and makes sure that the characteristic\nimpedance of the transmission lines (the copper tracks connecting the chip to the connector) are close to the USB\nspecification of 90\u03a9 (measured differentially). On a 1mm thick board such as this, if we use 0.8mm wide tracks on\nUSB_DP and USB_DM, with a gap of 0.15mm between them, we should get a differential characteristic impedance of\naround 90\u03a9. This is to ensure that the signals can travel along these transmission lines as cleanly as possible,\nminimising voltage reflections which can reduce the integrity of the signal. In order for these transmission lines to work\nproperly, we need to make sure that directly below these lines is a ground. A solid, uninterrupted area of ground copper,\nstretching the entire length of the track. On this design, almost the entirety of the bottom copper layer is devoted to\nground, and particular care was taken to ensure that the USB tracks pass over nothing but ground. If a PCB thicker than\n1mm is chosen for your build, then we have two options. We could re-engineer the USB transmission lines to\ncompensate for the greater distance between the track and ground underneath (which could be a physical\nimpossibility), or we could ignore it, and hope for the best. USB FS can be quite forgiving, but your mileage may vary. It is\nlikely to work in many applications, but it\u2019s probably not going to be compliant to the USB standard.\n</code></pre></p> <p>Since we're using a 4 layer board, I'll use the JLC impedance calculator to get the 90\u03a9</p> <p>Current KiCad bom</p> info Value Reference Footprint LCSC Part # link basic? price Qty 100nF Cap 100n C5,C7,C9,C11,C12,C13,C14,C15,C16 Capacitor_SMD:C_0402_1005Metric nan nan nan nan 9 1uF Cap 1u C8,C10 Capacitor_SMD:C_0402_1005Metric nan nan nan nan 2 Crystal ABM8-272-T3 X1 crystal:ABM8-272-T3_ABR C20625731 https://jlcpcb.com/partdetail/AbraconLlc-ABM8_272T3/C20625731 no C$0.6692 1 Sensor BNO055 U1 Package_LGA:LGA-28_5.2x3.8mm_P0.5mm C93216 https://jlcpcb.com/partdetail/BoschSensortec-BNO055/C93216 no C$14.0435 1 PCIe fingers Bus_PCI_Express_x1 J1 Connector_PCBEdge:BUS_PCIexpress_x1 nan nan nan nan 1 DC-DC Converter LMR51430 U6 Package_TO_SOT_SMD:SOT-23-6 C5219261 https://jlcpcb.com/partdetail/TexasInstruments-LMR51430YFDDCR/C5219261 no C$1.4952 1 CAN Transceiver MCP2562-E-SN U5 Package_SO:SOIC-8_3.9x4.9mm_P1.27mm C53609 https://jlcpcb.com/partdetail/MicrochipTech-MCP2562_ESN/C53609 no C$12.56 1 MCU RP2040 U2 Package_DFN_QFN:QFN-56-1EP_7x7mm_P0.4mm_EP3.2x3.2mm C2040 https://jlcpcb.com/partdetail/RaspberryPi-RP2040/C2040 no C$1.4190 1 MUX TPS2116DRL U3 Package_TO_SOT_SMD:SOT-583-8 C3235557 https://jlcpcb.com/partdetail/TexasInstruments-TPS2116DRLR/C3235557 no C$0.8959 1 USB-C TYPE-C-31-M-04 J2 TYPE-C-31-M-04:HRO_TYPE-C-31-M-04 C129018 https://jlcpcb.com/partdetail/Korean_HropartsElec-TYPE_C_31_M04/C129018 no C$0.8196 1 Flash W25Q128JVP U4 Package_SON:WSON-8-1EP_6x5mm_P1.27mm_EP3.4x4.3mm C190862 https://jlcpcb.com/partdetail/WinbondElec-W25Q128JVPIQ/C190862 no C$1.0737 1"},{"location":"avionics/modules/power/0_0_2/","title":"0.0.2","text":"<p>This prototype power module was developed as part of a learning initiative. Manufactured and assembled by JLCPCB, the boards were delivered in 15 days using the \u201cGlobal Standard Direct Line\u201d shipping method. The cost was $116.28 CAD for a set of 5 boards. All functions, including the battery level monitor, operate flawlessly. During testing, the charging/switching IC exhibited slight warmth, which was within acceptable limits. Additionally, a 3.3k resistor was mistakenly placed where a 330-ohm resistor was intended. Despite this, the module performed without any issues.</p> <p></p> <p> </p>"},{"location":"avionics/modules/power/0_0_2/#002-components","title":"0.0.2 Components","text":"<ul> <li> <p>18650 charger datasheet</p> </li> <li> <p>Battery protection circuit</p> </li> <li> <p>Protection IC FET</p> </li> <li> <p>Charing and switching IC: BQ2407</p> </li> <li> <p>\"Fuel guage\"</p> </li> <li> <p>TPS63001</p> </li> <li> <p>PCIe Specs PDF (page 92 and 136)</p> </li> <li> <p>USBC</p> </li> </ul>"},{"location":"avionics/modules/power/0_0_2/#bom","title":"BOM","text":"Comment Designator Footprint LCSC Part Number JLCPCB Basic? 0.01Ohm R11 1206 C844910 no 0.1uF C1 0402 C1525 yes 1M R2, R4 0402 C26083 yes 1uF C5, C7 0402 C52923 yes 1uH L2 1008 C882955 no 1.5K R5, R7 0402 C25867 yes 1.8K R8 0603 C4177 yes 2.2K R3 0402 C25879 yes 3K R16 0603 C4211 yes 3.3K R1 0402 C25890 yes 4.7uF C6, C8 0402 C23733 yes 5.1K R12, R13 0402 C25905 yes 10K R6, R14, R15 0402 C25744 yes 22uF C9 0603 C59461 yes 47uF C10 0805 C16780 yes 91K R18 0402 C1161 no 470nF C4 0603 C1623 yes 510K R17 0603 C23192 yes Battery Monitor U4 SON-12-EP(2.5x4) C473397 no Battery Protection IC U1 WSON (6) C183096 no Buck-Boost U5 SOT-583 C5219190 no Charger/Switcher U2 VQFN (16) C140288 no FET Q1, Q2 VSON-8(3.3x3.3) C2861720 no JST Connector P1 SMD,P=2mm C295747 no PCIe Gold Fingers J2 nan nan nan Red LED D1 0603 C2286 yes USB-C J1 nan nan nan White LED D2 0603 C2290 yes"},{"location":"avionics/modules/power/0_1_0/","title":"0.1.0","text":"<p>There will be two power modules. One for testing, and one for production.</p>"},{"location":"avionics/modules/power/0_1_0/#testing-module","title":"Testing Module","text":"<p>This module will only include:</p> <ul> <li>USB-C</li> <li>5v buck boost</li> <li>3.3v reg</li> </ul>"},{"location":"avionics/modules/power/0_1_0/#production-module","title":"Production Module","text":"<p>The production module will have</p> <ul> <li>USB-C (which will have mag safe thing that connects to it)</li> <li>5v reg</li> <li>3.3v reg</li> <li>RP2040</li> <li>Battery voltage monitor</li> <li>charging and switching circuit</li> </ul>"},{"location":"avionics/modules/power/0_1_0/#ics","title":"ICs","text":"<ul> <li> <p>Charging IC</p> <ul> <li>TI 1s to 3s charger and power path selector</li> </ul> </li> <li> <p>Power indicator</p> </li> <li> <p>Buck-Boost Converter  or this Buck-boost: TPS63070  or this </p> </li> <li> <p>Usb protection circuit TPD4S480 It should be able to be programmed and charged over the same USB port. If you plug into your laptop or something it shouldn't try to </p> </li> </ul>"},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/12/01/two-weeks-update/","title":"Two Weeks Update","text":"<p>It's been two weeks since I started the 4\" Avionics. I just ordered it for assembly with JLCPCB I used USP express saver shipping. Hopefully I don't have to pay any more fees when it arrives. It cost $80.75. I got 5 boards. They don't have USB-C connectors in stock so I'm getting them off digikey.</p>"},{"location":"blog/2024/12/02/december-2/","title":"December 2","text":"<p>Gonna start work on the avionics bay . I think I'm stuck to using Altium and Solidworks now.</p>"},{"location":"blog/2024/12/09/december-9th/","title":"December 9th","text":"<p>Things I bought today:</p> <ul> <li>Test PCBs from JLC, module and backplate for the 4\" Avionics</li> <li>12 18650s</li> <li>spot welder and threaded heat inserts</li> <li>PCIe and UCB-C receptacles</li> </ul> <p>Should I use 0603, 0402 or 0201? If I go with 0603 we can solder it pretty easily. 0201 its not happening, and 0402 it's harder. Those components aren't even the expensive ones to have JLCPCB assemble for you. Actually 0201 is more expensive I think. Okay 0402 it is then. </p> <p>For the next board, we'll have a way to upload new code over the air. The CAN network will have its bootselect pins on the PCIe bus, the raspberry pi 5 or something will be able to put any of them into mass storage mode, and upload new code on the USB lines... maybe I should just do this now. okay fine i'll do it now</p>"},{"location":"blog/2024/12/12/chip-selection/","title":"Chip Selection","text":"<p>Here is the post outlining the reasons for picking the chips. This post will be updated in the future with reasons why or why not to pick these chips. Requirement for all chips was being available on JLC. </p>"},{"location":"blog/2024/12/12/chip-selection/#mcu","title":"MCU","text":"<p>RP 2040</p> <p>I went with the RP2040 because the alternatives are usually more complex or more expensive. The documentation on the rp2040 is great and there's a great online community around it. It's more than fast enough to accomplish what we need to do. </p> <p>ESP chips get kind of expensive, although they have some kind of CAN and ethernet capability on board. When we do go ethernet it'll probably be an addition to the CAN bus though.</p>"},{"location":"blog/2024/12/12/chip-selection/#flash","title":"Flash","text":"<p>W25Q128JVP Didn't even read the data sheet. It's the one they use in the rp2040 hardware design guide, it's the most flash the rp2040 can use.</p>"},{"location":"blog/2024/12/12/chip-selection/#crystal","title":"Crystal","text":"<p>ABM8-272-T3 In the rp2040 design guide. </p>"},{"location":"blog/2024/12/12/chip-selection/#usb-c","title":"USB-C","text":"<p>USB-C port Easy choice; pretty much only one on JLCPCB at the time</p>"},{"location":"blog/2024/12/12/chip-selection/#power","title":"Power","text":""},{"location":"blog/2024/12/12/chip-selection/#33v-regulator","title":"3.3v Regulator","text":"<p>LMR51430YFDDCR Constant, 1kHz switching reg, wide voltage input range, goes to 3.3v, cheap</p>"},{"location":"blog/2024/12/12/chip-selection/#5v-buck-boost","title":"5v buck-boost","text":"<p>TPS630701</p>"},{"location":"blog/2024/12/12/chip-selection/#power-mux","title":"Power MUX","text":"<p>TPS2121RUXR Two inputs, one output cheap, on JLC. done. Using this in Highest Voltage Operation (VCOMP) mode with the battery as the main and USB as secondary  </p>"},{"location":"blog/2024/12/12/chip-selection/#sensors","title":"Sensors","text":""},{"location":"blog/2024/12/12/chip-selection/#imu","title":"IMU","text":"<p>Need IMU with accelerometer, gyroscope and magnetometer, high sample rate, some vibration resistance, onboard sensor fusion and on JLC.</p> <p>BNO055 This chip is very simple and meets all the requirements, it has a slightly on the low end sample rate of 100Hz but thats all right. It also only does +-16 Gs. I considered a bunch of other chips, but this one has the extra advantage of simplicity. You can't run your own code on it but that's fine. </p> <p>So it's not available for economic assembly with JLC. It's also like 20$ on digikey. It's also hard to solder. Two options: use another chip or get a adafruit breakout board so we can reuse the chip. Note to self: make sure the chips are available with economic assembly</p>"},{"location":"blog/2024/12/12/chip-selection/#pressure","title":"Pressure","text":"<p>Need temperature and pressure and high sample rate.</p> <p>BMP388 Cheaper than the BMP390, slightly less accurate though. 200hz sample rate. </p>"},{"location":"blog/2024/12/12/chip-selection/#payload-module","title":"Payload Module","text":"<p>We might add a payload module with a bunch of different sensors and the \"experiment\" will be to see the discrepancies in their readings.</p>"},{"location":"blog/2024/12/12/chip-selection/#0201-0402-or-0603","title":"0201, 0402 or 0603?","text":"<p>Should I use 0603, 0402 or 0201? If I go with 0603 we can solder it pretty easily. 0201 its not happening, and 0402 is harder. Those components aren't even the expensive ones to have JLCPCB assemble for you. Actually 0201 is more expensive I think. Okay 0402 it is then. </p> <p>Okay there's not that many JLC basic resistors so I'll use 0603 and hand solder those ones.</p>"},{"location":"blog/2024/12/12/chip-selection/#conclusion","title":"Conclusion","text":"<p>It's not a good idea to spend too long on chip selection, better to just start making shit and find out along the way. I'll probably regret some of these choices, but that is part of learning. Some chips I really didn't think that much about, if it does the job and is cheap enough I'll use it I don't need to compare it with every single alternative out there. Some chips like the sensors I compared a bunch of chips in the same range, and took inspiration from other teams and such. ChatGPT is great for suggesting chips, it currently gets the numbers wrong very often so you can't trust anything and have to read the data sheet yourself to confirm but it still makes it much much easier. Vibration wasn't too much a concern, most chips can withstand the vibration we'd put them through.</p>"},{"location":"blog/2024/12/01/dingboard-is-nextboard/","title":"dingboard is Nextboard","text":"<p>Well I named the dingboard the dingboard because I thought I was gonna make a bigger board later on and I was gonna name it the dongboard or some shit. There's no value in making a single board flight computer right now, so the MCU will be CAN enabled from the get go. It doesn't add much complexity. The MCU board will be ran at 3 volts so I will be able to use the V1 power board for it. Later on I'll need to use an antenna which will be ran at 5v with 3.3v logic. So while power v1 is shipping, I'll work on the MCU with CAN, while that is being shipped I'll upgrade the power to 3s with 3.3v 5v and unregulated 12v. Then I'll work on the antenna module while that is shipping then I'll work on the GPS while that is shipping then blah blah. The specifics will change but this is the idea.</p>"},{"location":"blog/2024/12/23/rebranding/","title":"Rebranding","text":"<p>The site has officially been changed to Sonic Avionics. I choose this name because sonicavionics.com was available and it kinda rhymes. I changed dingboard's name to 4\" Avionics. This is kind of sad, but we're gonna have to present to some committees and it wouldn't look good to have it called that. We lack credibility so a silly name would be seen as a negative thing. I promise to make the 6 inch avionics called dongboard. </p>"},{"location":"blog/2024/12/20/one-month-of-pcbs/","title":"One Month of PCBs","text":"<p>The power module 0.0.2 works perfectly.</p> <p>Here's some photos of me testing it. I got heat shrink that's too big.</p> <p> </p> <p></p> <p>I even got the fuel gauge chip working.</p> <p></p> <p>A month into this project, and I got a working PCB! I'm happy about that. Not often it works on the first try either. It took 15 days for the PCBs to arrive and it cost $116.28 CAD for assembly for 5 boards including shipping and tax and everything.</p>"},{"location":"blog/2024/12/07/avionics-bay-cad/","title":"Avionics Bay CAD","text":"<p>Wow, the CAD for the avionics bay took a little longer than I expected. I had to make everything easily modifiable, so I used variables for almost every dimension. With the change of a couple numbers in a text file I can go from this:</p> <p></p> <p>to this</p> <p></p> <p>This is a fun avionics layout. I think it's kinda fun how they all slot into a PCIe CAN bus. 3D printing this is gonna be weird. I could also go with this design, but I think the first one is more fun.</p> <p></p> <p>The thing about this avionics system, is that once the board dimensions are made, there's no going back. </p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/","title":"KiCAD vs Altium and Solidworks vs OnShape","text":"<p>Gotta pick which software to use. Most teams use KiCAD and Solidworks.</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#kicad-vs-altium","title":"KiCad vs Altium","text":"<p>5 minutes into KiCAD. Here's the pros and cons of KiCAD. One downside already is no dark mode support on windows</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros","title":"Pros","text":"<ul> <li>There seems to be a much better built in library. Well it has PCIe footprints.</li> <li>I don't have to sign in and click roam on the licenses all the time. </li> <li>There's a plentiful plugs ins repo. </li> <li>It's way way faster</li> <li>Dark mode for schematic editor.</li> <li>FOSS</li> <li>Altium's manufacturer part search is really not that fast, and for whatever reason the BOM is the slowest thing in the world. There's few companies that would use the build in supply chain shit, it just slow things down and I didn't see a way to disable it without disabling the manufacturer part search.</li> <li>Many different repos for all the manufactures design rules. </li> <li>Exporting is way faster with the JLCPCB plug in</li> <li>The measurement tool is slightly better</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons","title":"Cons","text":"<ul> <li>The UI is somewhat less professional looking. (who cares)</li> <li>KiCAD doesn't have dark mode on windows. Altium's UI is dark by default, but I don't think you can add themes for the actual schematic editor. So that's </li> <li>Altium actually has better git integration surprisingly.</li> <li>You can only have one project open per instance. <code>open -n /Applications/KiCad/kicad.app</code></li> <li>I've experienced more crashes than Altium. Running tally of crashes: 10</li> <li>Sometimes the footprints don't show up in the previewer windows when selecting a chip</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#routing","title":"Routing","text":"<p>Altium has much better routing. Dragging chips that already have traces around in Altium works much better than in KiCad. </p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#design-rules","title":"Design Rules","text":"<p>The design rules manger is much better in Altium.</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#solidworks-vs-onshape","title":"Solidworks vs OnShape","text":"<p>I'll do pros and cons of Solidworks</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros_1","title":"Pros","text":"<ul> <li>Faster </li> <li>Realview graphics</li> <li>Can handle assembly as large as your computer will allow. OnShape is run in AWS. I didn't think this would be an issue, because they dynamically allocate compute based on your needs. Even still, it is really slow loading things, and I did notice that after a while it gets faster the more you use it, but still its much slower than Solidworks.</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons_1","title":"Cons","text":"<ul> <li>Very old looking interface </li> <li>Have to update variable file reference manually every time you add a variable. </li> <li>No version control, although OnShape has it but doesn't use git.</li> <li>Mating in OnShape is faster, the same thing that takes one mate in OnShape takes 2 or 3 in Solidworks.</li> <li>Only runs on windows, OnShape is really great for how it runs in the browser. I would do almost anything to never have to use windows again, but onshape is just too slow.</li> <li>Very expensive for companies, onshape has a free tier for open source people.</li> <li>The workflow with Solidworks involves using sharepoint or something similar. The files will get too large for regular git so LFS will be needed.</li> </ul>"},{"location":"blog/2024/12/04/solidworks-is-fucked/","title":"Solidworks is fucked","text":"<p>Why is Solidworks so fucked. It keeps flickering between these views:</p> <p></p> <p></p> <p>I've had so many glitches. I've ran the import diagnostics on the PCIe step it says its fine. I did... do the workaround to get my 3070ti working. Although this happens with realview on or off. </p>"},{"location":"blog/2024/11/15/init/","title":"Init","text":"<p>I'm starting a new website. Getting tired of my php site.</p> <p>I noticed my school is behind compared to other schools. I plan on getting us up to speed, while at the same time learning as much as possible. The end goal is making a rocket that can compete with waterloo's borealis. If all goes right, we'd launch it at LC 2026. This year (LC 2025), the goal is to make a mojave spinx esque rocket. I'm going to start off with recovery, and avionics. The reason being, is that it is possible to launch the same avionics in a 4 inch diameter kit rocket, that we could use in a mojave sphinx. The recovery system will be almost the exact same. </p> <p>The first thing I'm gonna do is make a very simple board in Altium. It will have the rp 2040, a usbc port, flash, a LED, reset button, pin out, USB over current protection, a barometer and an accelerometer. It'll be a bit better than a pico.</p>"},{"location":"blog/2024/11/16/nov-16th/","title":"Nov 16th","text":"<p>Agenda for today:</p> <ul> <li> Altium with GitHub</li> <li> Altium with Solidworks</li> <li> Begin 4\" Avionics</li> </ul>"},{"location":"blog/2024/11/17/nov-17th/","title":"Nov 17th","text":"<p>Learnt about mosfets</p>"},{"location":"blog/2024/11/18/nov-18th/","title":"Nov 18th","text":"<p>Learnt that I shouldn't just use a mosfet since there's power switching/charging ICs</p>"},{"location":"blog/2024/11/19/nov-19th/","title":"Nov 19th","text":"<p>Considering ordering the power board on its own for now. The only issue is the wait time. Could continue with 6502 stuff until then or work on the CPU board. </p> <p>Here's the current check list of things to implement:</p> <ol> <li> Battery protection IC</li> <li> Charging IC</li> <li> Buck-boost</li> </ol>"},{"location":"blog/2024/11/26/nov-26th/","title":"Nov 26th","text":"<p>Agenda:</p> <ul> <li> solid works and altium<ul> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> </ul> </li> <li> get proper PCIe dimensions</li> <li> add power switch for battery forget it i'll just unplug it for this version</li> <li> finish routing</li> <li> add test points</li> <li> add all LCSC designators</li> </ul> <p>This is not going to be a CAN enabled board. The gold fingers are for practice, and modularity. The only reason it's not the next board already is because I choose 1S for the battery for simplicity. Might have been better to just make the full board from the get go. but since I'll have to go to 3S I should just to the CAN stuff when I do that.</p> <p>if time:</p> <ul> <li>add table of contents to menu if it doesn't work make open an issue</li> <li>make tables have divisions </li> </ul>"},{"location":"blog/2024/11/29/annoyed-at-altium-still/","title":"Annoyed at Altium Still","text":"<p>So to use ECAD/MCAD you have to use Altium 365. It makes it's own .git file in the main Altium directory. So you could still have a .git in the directory above it which you could push to github as a primary thing. Then you could just push to the Altium 365 whenever you want to use MCAD. The ECAD/MCAD integration just doesn't seem worth the hassle though. Being able to move around components in MCAD does seem really cool though. I just wish they did it right. Engineering tools are never designed by good software engineers. The software engineers that make it never really use it. The best stuff is made by the people that use the thing. git is so good because the people that maintain it are the people that use it. I love that shit that's like \"made by blank for blank.\" Usually it's shampoo or something, but when it's actually true the product is good.</p> <p>When I pushed my project to Altium 365 it copied my project to a new location on my computer. So I've been making all these changes to a separate repo this whole time. So to continue using the old repo, I'd have to delete the old files and add the new files, reinitializing the repo basically. Because the Altium files are all binaries. I hate Altium.</p> <p>At some point I switched the buck boost to a linear regulator/boost. Idk how that happened now I gotta switch it back.</p>"},{"location":"blog/2024/11/25/altium-complaints/","title":"Altium Complaints","text":"<p>.lia files are fully broken in Altium. You literally just can't import them anymore.</p> <p>There's this nice PCIe template I want to use, but circuit maker is effed. Why are they even trying to keep circuit maker alive? It's fully broken because it wants you to sign in with a name and password but you can only use google to sign up in the browser and there's no option to change your password anywhere. </p> <p>There used to be a template libary?. Now all the \"design content\" links redirect to octopart which doesn't seem to have templates like the design content. https://designcontent.live.altium.com/#Search/pcie</p> <p>The license manager has to be one of the most annoying things known to man. Every now and then you start up Altium and you have to click \"release\" then roam on three licenses because it thinks you're signed in somewhere else.</p> <p>Altium, Solidworks and Onshape have different methods of rotation. </p> <p>Onshape is clearly the best, pan zoom and rotate are all done without a modifier. It's just constrained rotate which uses shift. I don't think solidworks even has that though.</p> <p>Altium is the worst is uses track ball rotation which inherently requires more clicks.</p> <p>Matt Keeter // 3D Rotation Design</p> <p>Everying time I paste a JLCPCB part number into the BOM the entire software freezes for a good 20 seconds. </p>"},{"location":"blog/2024/11/26/ecadmcad-ideal-version-control-workflow/","title":"ECAD/MCAD Ideal Version Control Workflow","text":"<p>Here's some ideas for how Solidworks and Altium or any MCAD and ECAD would ideally work together. </p> <p>Altium codesigner is for use with Altium 365 only.  Solidworks doesn't have branching and merging. It's proprietary version control method is rubbish.</p> <p>Ideally, you'd have a MCAD and a ECAD repo. Both of them use each other as submodules. Or you could just have the one repo with RBAC but I don't think github lets you do that because it would be annoying if you commit to a file you don't have perms for then try to push it it would say nope bruh you can't change that one file in all your files you changed. Actually that doesn't sound so bad </p> <p>MCAD pulls to the ECAD submodule. Changes are made to the PCB, a pull request is made, the electrical engineer accepts them. Then the rest of the MCAD team pulls from the ECAD repo and has access to the new changes. There should be some features like board shape, and max component height that the MCAD engineer has control of that a pull request is required to make. That would be what the submodule </p> <p>Maybe there would just be a third repo for things that both teams depend on. This would only be the board dimensions. Both the ECAD and MCAD softwares should be able to edit it, but there should be accept/deny system where an engineer from both teams need to approve the change.  The ECAD team doesn't want to see the rest of the structure they only care about the PCB.</p> <p>Sometimes you'd want the MCAD team designing an enclosure as a secondary to the PCB layout, sometimes there's board constraints sizes like in a rocket which makes the MCAD designers primary.  Three sort of use cases: Primary MCAD, primary ECAD, and equal priority</p> <p>There would need to be a system for breaking changes. There needs to be keep out regions, and expected layouts. </p> <p>I would like for right now, to be able to push a board layout, a rough layout, to the board dimensions/connectors repo. This contains the gold fingers, USB and JST connectors. This is an initial push so it doesn't require both team's approval. Next I want to go into solidworks, move around the gold fingers, change the board diameter, lets say shrink it. Then I push to the dimensions/connectors repo. A pop up on Altium appears, it says \"a change has been proposed\". Then it says would you like to branch to check approvability? I finish my changes to the ECAD before I then branch the ECAD repo. This special branch pulls changes proposals from the dimensions/connectors repo. Then I look around to see if I can rework the PCB a bit to allow the changes. I rework the pcb a bit then accept the changes. I merge back the ECAD branch to main. The new main has a different git hash has associated with the dimensions/connectors submodule. </p> <p>Anyways there's some spit balling about an ideal version control ECAD/MCAD workflow. I don't think this can be done with kicad or some open source cad software. The two softwares would need to agree on a system for the dimensions/connectors files. And it's probably best the two softwares are kept separate. </p> <p>So you can use workarounds to avoid using Altium 365, but you loose too much convenience for it to be worth it. You'd have to keep exporting to a STEP in altium then in solid works you'd have to export to a DXF then in Altium import that to be the board shape.</p>"},{"location":"blog/2024/11/20/nov-20th/","title":"Nov 20th","text":"<p>Current progress:</p> <p></p> <p>The hardest part was definitely the component selection. I read through so many data sheets. Maybe I can get the rest of the board done tomorrow?! Then I can go relax with some 6502 stuff for a bit.</p> <p>Tomorrow:    - MCU schematic   - PCB layout   - Verify design for PCBA</p>"},{"location":"blog/2024/11/21/nov-21th/","title":"Nov 21th","text":"<p>Added a battery \"fuel guage\" it gives you an accurate reading of the battery level over I2C</p> <p></p> <p>I started the PCB </p>"},{"location":"blog/2024/11/24/jlcpcb-and-altium-design-rules-issues/","title":"JLCPCB and Altium Design Rules Issues","text":"<p>JLCPCB \"PCB Manufacturing &amp; Assembly Capabilities\" is kinda confusing.</p> <p>So for a two layer PCB,</p> <p></p> <p>it says \"2-layer: 0.15mm hole size / 0.25mm via diameter.\" That would mean the pad width or \"annular ring\" can be 0.05mm right? </p> \\[ \\frac{0.25}{2} - \\frac{0.15}{2} = 0.05 \\] <p>but wait: </p> <p>Now it says: \"2-layer: 1 oz: Recommended 0.25 mm or above; absolute minimum 0.18 mm.\" </p> <p>I guess a via doesn't count as a PTH (Plated Through Hole)?</p> <p>By default in Altium you set your minimum annular ring:  and this applies to vias and PTH. So... I guess Altium probably shouldn't do this by default?</p>"},{"location":"learn/","title":"Learn","text":"<p>Here are some resources to help learn things.</p>"},{"location":"learn/#git","title":"Git","text":"<ul> <li>Learn Git Branching</li> </ul>"},{"location":"learn/dfmguide/","title":"DFM Guide","text":"<p>Design for manufacturing guide.  \"Forked\" from QRET's component repository.</p>"},{"location":"learn/dfmguide/#lcsc-part-numbers","title":"LCSC Part Numbers","text":"<p>JLCPCB is owned by LCSC, which is a large component distributor. An LCSC Part Number is a unique identifier for a given component. They will start with a \u201cC\u201d follow by several digits (e.g. C6186, C51230, etc.). We add these part numbers to our KiCAD schematics for parts we want assembled, and then can automatically generate a BOM (bill of material) that JLCPCB can accept. You can find these numbers on the JLCPCB page.</p> <p></p>"},{"location":"learn/dfmguide/#jlcpcb-basic-vs-extended-parts","title":"JLCPCB Basic vs. Extended Parts","text":"<p>When searching for components through JLCPCB, they are labelled either \u201cBasic\u201d or \u201cExtended\u201d. Basic components are ones that are used very frequently, and are thus loaded into the pick-and-place machines already. Extended components are less commonly used, and thus require additional effort to load them into machines. This extra effort translates to an additional fixed cost of ~$4CAD (\u201dFeeder Loading fee\u201d) for every Extended part. See this page for more pricing details. We want to use Basic parts wherever possible. (Note: Even when currency is set to CAD, the prices on JLCPCB\u2019s part inventory seem to be USD).</p> <p></p>"},{"location":"learn/dfmguide/#jlcpcb-economic-vs-standard-pcb-assembly","title":"JLCPCB Economic vs. Standard PCB Assembly","text":"<p>When asking JLCPCB to solder components for us, they have two tiers; Economic and Standard. Economic comes with many benefits, largely the reduced price &amp; option for Basic parts being free. Standard PCBA gives more options, but is more expensive (~$25 extra) and requires a loading fee for ALL components, thus resulting in a much higher price. More advanced features, such as very small components or gold-plated edge connectors, require Standard PCBA. See this page for more info about JLCPCB\u2019s Manufacturing and Assembly Capabilities. We want to use the Economic option whenever possible. If \u201cEconomic\u201d is selected, any \u201cStandard Only\u201d components will be highlighted after uploading the BOM during the order process. You can also use JLCPCB\u2019s \u201cBOM Tool\u201d to evaluate current part selection.</p> <p></p> <p></p>"},{"location":"learn/dfmguide/#passive-smd-component-sizes","title":"Passive SMD Component Sizes","text":"<p>Note: SMD is a form of SMT.</p> <p>We very commonly use the Imperial naming scheme when referring to passive SMD sizes.</p> <p>We will be trying to avoid 0402 components where possible, to make assembly &amp; repairs easier. 0603 and 0804 are our go-to sizes. Ideally we want to select components that JLCPCB stocks and avoid extended parts where possible.</p> <p></p>"},{"location":"learn/dfmguide/#jlc-basic-components","title":"JLC Basic Components","text":"<p>I don't believe there are any basic inductors.</p>"},{"location":"learn/dfmguide/#basic-smd-components-wip","title":"Basic SMD Components (WIP)","text":"Value Type Footprint LCSC # Red LED LED 0603 C2286 Red LED LED 0805 C84256 White LED LED 0603 C2290 White LED LED 0805 C34499 Yellow LED LED 0603 C72038 Yellow LED LED 0805 C2296 Green LED LED 0805 C2297 2N7002 N-MOSFET SOT-23 C8545 AO3400A N-MOSFET SOT-23-3L C20917 AO3401A P-MOSFET SOT-23 C15127 SI2301CDS P-MOSFET SOT-23 C10487 1N5819WS Schottky Diode SOD-323 C191023 SS14 Schottky Diode DO-214AC C2480 1k Resistor 0805 C17513 10pF MLC Capacitor 0603 C1634 10pF MLC Capacitor 0402 C32949 30pF MLC Capacitor 0603 C1658 2.2nF Capacitor 0603 C1604 10nF MLC Capacitor 0603 C57112 10nF MLC Capacitor 0402 C15195 100nF MLC Capacitor 0603 C14663 100nF MLC Capacitor 0402 C1525 1uF MLC Capacitor 0805 C28323 1uF MLC Capacitor 0603 C15849 1uF MLC Capacitor 0402 C52923 4.7uF MLC Capacitor 0805 C1779 10uF MLC Capacitor 0603 C96446 10uF MLC Capacitor 0402 C15525 22uF MLC Capacitor 0805 C45783 100Ohm Ferrite Bead 0805 C1015 600Ohm Ferrite Bead 0805 C1017"},{"location":"learn/dfmguide/#0603-resistors","title":"0603 Resistors","text":"<p>Most of these come in 0402 basic as well.</p> Value LCSC Part Number 0R C21189 10R C22859 20R C22950 33R C23140 51R C23197 100R C22775 120R C22787 150R C22808 200R C8218 220R C22962 270R C22966 300R C23025 330R C23138 390R C23151 470R C23179 510R C23193 560R C23204 680R C23228 820R C23253 1k C21190 1.2k C22765 1.5k C22843 1.8k C4177 2k C22975 2.2k C4190 2.4k C22940 2.7k C13167 3.3k C22978 3.6k C22980 3.9k C23018 4.7k C23162 5.1k C23186 5.6k C23189 6.2k C4260 6.8k C23212 7.5k C23234 8.2k C25981 9.1k C23260 10k C25804 12k C22790 13k C22797 15k C22809 18k C25810 20k C4184 22k C31850 24k C23352 27k C22967 30k C22984 33k C4216 39k C23153 47k C25819 51k C23196 56k C23206 68k C23231 75k C23242 82k C23254 100k C25803 120k C25808 150k C22807 200k C25811 220k C22961 300k C23024 330k C23137 470k C23178 510k C23192"},{"location":"learn/dfmguide/#formatting-your-bom","title":"Formatting your BOM","text":"<p>The following is a good BOM:</p> <p></p> <p>The most important thing in your BOM is the LCSC part number:</p> <p></p> <p>When you upload your BOM to JLCPCB it looks for the LCSC part number and matches the component automatically.</p> <p>You do not need silk screen chip designators for JLCPCB assembly. You do however need to put dots on pin one of ICs, and note anything that is polarized including LEDs. Try the JLCPCB assembly demo.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/4-avionics/","title":"4\" Avionics","text":""},{"location":"blog/category/complaints/","title":"complaints","text":""},{"location":"blog/category/agenda/","title":"Agenda","text":""},{"location":"blog/category/info/","title":"Info","text":""},{"location":"blog/page/2/","title":"Latest Posts","text":""},{"location":"blog/page/3/","title":"Latest Posts","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/archive/2024/page/3/","title":"2024","text":""},{"location":"blog/category/4-avionics/page/2/","title":"4\" Avionics","text":""},{"location":"blog/category/4-avionics/page/3/","title":"4\" Avionics","text":""}]}