{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is Zeul's other website for his other documentation and other blog</p> Zeul dingboard 8-bit computer MARS flight computers"},{"location":"nextboard/","title":"next board","text":"<p>I'll change the name later</p> <p>I gotta plan ahead so this is where I'll put the next board ideas.</p> <p>Going to need to power 5v stuff. Better to buck than boost. Probably going to go with 3s.</p>"},{"location":"nextboard/#cots-components","title":"COTS Components","text":"<p>GPS</p> <ul> <li>Featherweight 915 MHz</li> <li>BigRedBee COTS GPS</li> </ul>"},{"location":"nextboard/#ics","title":"ICs","text":"<p>GPS     - blox m10q</p> <ul> <li> <p>Charging IC</p> <ul> <li>TI 1s to 3s charger and power path selector</li> </ul> </li> <li> <p>Power indicator</p> </li> <li> <p>Buck-Boost Converter  or this Buck-boost: TPS63070 </p> </li> </ul>"},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/11/15/init/","title":"Init","text":"<p>I'm starting a new website. Getting tired of my php site.</p> <p>I noticed my school is behind compared to other schools. I plan on getting us up to speed, while at the same time learning as much as possible. The end goal is making a rocket that can compete with waterloo's borealis. If all goes right, we'd launch it at LC 2026. This year (LC 2025), the goal is to make a mojave spinx esque rocket. I'm going to start off with recovery, and avionics. The reason being, is that it is possible to launch the same avionics in a 4 inch diameter kit rocket, that we could use in a mojave sphinx. The recovery system will be almost the exact same. </p> <p>The first thing I'm gonna do is make a very simple board in Altium. It will have the rp 2040, a usbc port, flash, a LED, reset button, pin out, USB over current protection, a barometer and an accelerometer. It'll be a bit better than a pico.</p>"},{"location":"blog/2024/11/16/nov-16th/","title":"Nov 16th","text":"<p>Agenda for today:</p> <ul> <li> Altium with GitHub</li> <li> Altium with Solidworks</li> <li> Begin dingboard</li> </ul>"},{"location":"blog/2024/11/17/nov-17th/","title":"Nov 17th","text":"<p>Learnt about mosfets</p>"},{"location":"blog/2024/11/18/nov-18th/","title":"Nov 18th","text":"<p>Learnt that I shouldn't just use a mosfet since there's power switching/charging ICs</p>"},{"location":"blog/2024/11/19/nov-19th/","title":"Nov 19th","text":"<p>Considering ordering the power board on its own for now. The only issue is the wait time. Could continue with 6502 stuff until then or work on the CPU board. </p> <p>Here's the current check list of things to implement:</p> <ol> <li> Battery protection IC</li> <li> Charging IC</li> <li> Buck-boost</li> </ol>"},{"location":"blog/2024/11/26/nov-26th/","title":"Nov 26th","text":"<p>Agenda:</p> <ul> <li> solid works and altium<ul> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> </ul> </li> <li> get proper PCIe dimensions</li> <li> add power switch for battery forget it i'll just unplug it for this version</li> <li> finish routing</li> <li> add test points</li> <li> add all LCSC designators</li> </ul> <p>This is not going to be a CAN enabled board. The gold fingers are for practice, and modularity. The only reason it's not the next board already is because I choose 1S for the battery for simplicity. Might have been better to just make the full board from the get go. but since I'll have to go to 3S I should just to the CAN stuff when I do that.</p> <p>if time:</p> <ul> <li>add table of contents to menu if it doesn't work make open an issue</li> <li>make tables have divisions </li> </ul>"},{"location":"blog/2024/11/25/altium-complaints/","title":"Altium Complaints","text":"<p>.lia files are fully broken in Altium. You literally just can't import them anymore.</p> <p>There's this nice PCIe template I want to use, but circuit maker is effed. Why are they even trying to keep circuit maker alive? It's fully broken because it wants you to sign in with a name and password but you can only use google to sign up in the browser and there's no option to change your password anywhere. </p> <p>There used to be a template libary?. Now all the \"design content\" links redirect to octopart which doesn't seem to have templates like the design content. https://designcontent.live.altium.com/#Search/pcie</p> <p>The license manager has to be one of the most annoying things known to man. Every now and then you start up Altium and you have to click \"release\" then roam on three licenses because it thinks you're signed in somewhere else.</p> <p>Altium, Solidworks and Onshape have different methods of rotation. </p> <p>Onshape is clearly the best, pan zoom and rotate are all done without a modifier. It's just constrained rotate which uses shift. I don't think solidworks even has that though.</p> <p>Altium is the worst is uses track ball rotation which inherently requires more clicks.</p> <p>Matt Keeter // 3D Rotation Design</p>"},{"location":"blog/2024/11/26/ecadmcad-ideal-version-control-workflow/","title":"ECAD/MCAD Ideal Version Control Workflow","text":"<p>Here's some ideas for how Solidworks and Altium or any MCAD and ECAD would ideally work together. </p> <p>Altium codesigner is for use with Altium 365 only.  Solidworks doesn't have branching and merging. It's proprietary version control method is rubbish.</p> <p>Ideally, you'd have a MCAD and a ECAD repo. Both of them use each other as submodules. Or you could just have the one repo with RBAC but I don't think github lets you do that because it would be annoying if you commit to a file you don't have perms for then try to push it it would say nope bruh you can't change that one file in all your files you changed. Actually that doesn't sound so bad </p> <p>MCAD pulls to the ECAD submodule. Changes are made to the PCB, a pull request is made, the electrical engineer accepts them. Then the rest of the MCAD team pulls from the ECAD repo and has access to the new changes. There should be some features like board shape, and max component height that the MCAD engineer has control of that a pull request is required to make. That would be what the submodule </p> <p>Maybe there would just be a third repo for things that both teams depend on. This would only be the board dimensions. Both the ECAD and MCAD softwares should be able to edit it, but there should be accept/deny system where an engineer from both teams need to approve the change.  The ECAD team doesn't want to see the rest of the structure they only care about the PCB.</p> <p>Sometimes you'd want the MCAD team designing an enclosure as a secondary to the PCB layout, sometimes there's board constraints sizes like in a rocket which makes the MCAD designers primary.  Three sort of use cases: Primary MCAD, primary ECAD, and equal priority</p> <p>There would need to be a system for breaking changes. There needs to be keep out regions, and expected layouts. </p> <p>I would like for right now, to be able to push a board layout, a rough layout, to the board dimensions/connectors repo. This contains the gold fingers, USB and JST connectors. This is an initial push so it doesn't require both team's approval. Next I want to go into solidworks, move around the gold fingers, change the board diameter, lets say shrink it. Then I push to the dimensions/connectors repo. A pop up on Altium appears, it says \"a change has been proposed\". Then it says would you like to branch to check approvability? I finish my changes to the ECAD before I then branch the ECAD repo. This special branch pulls changes proposals from the dimensions/connectors repo. Then I look around to see if I can rework the PCB a bit to allow the changes. I rework the pcb a bit then accept the changes. I merge back the ECAD branch to main. The new main has a different git hash has associated with the dimensions/connectors submodule. </p> <p>Anyways there's some spit balling about an ideal version control ECAD/MCAD workflow. I don't think this can be done with kicad or some open source cad software. The two softwares would need to agree on a system for the dimensions/connectors files. And it's probably best the two softwares are kept separate. </p> <p>So you can use workarounds to avoid using Altium 365, but you loose too much convenience for it to be worth it. You'd have to keep exporting to a STEP in altium then in solid works you'd have to export to a DXF then in Altium import that to be the board shape.</p>"},{"location":"blog/2024/11/20/nov-20th/","title":"Nov 20th","text":"<p>Current progress:</p> <p></p> <p>The hardest part was definitely the component selection. I read through so many data sheets. Maybe I can get the rest of the board done tomorrow?! Then I can go relax with some 6502 stuff for a bit.</p> <p>Tomorrow:    - MCU schematic   - PCB layout   - Verify design for PCBA</p>"},{"location":"blog/2024/11/21/nov-21th/","title":"Nov 21th","text":"<p>Added a battery \"fuel guage\" it gives you an accurate reading of the battery level over I2C</p> <p></p> <p>I started the PCB </p>"},{"location":"blog/2024/11/24/jlcpcb-and-altium-design-rules-issues/","title":"JLCPCB and Altium Design Rules Issues","text":"<p>JLCPCB \"PCB Manufacturing &amp; Assembly Capabilities\" is kinda confusing.</p> <p>So for a two layer PCB,</p> <p></p> <p>it says \"2-layer: 0.15mm hole size / 0.25mm via diameter.\" That would mean the pad width or \"annular ring\" can be 0.05mm right? </p> \\[ \\frac{0.25}{2} - \\frac{0.15}{2} = 0.05 \\] <p>but wait: </p> <p>Now it says: \"2-layer: 1 oz: Recommended 0.25 mm or above; absolute minimum 0.18 mm.\" </p> <p>I guess a via doesn't count as a PTH (Plated Through Hole)?</p> <p>By default in Altium you set your minimum annular ring:  and this applies to vias and PTH. So... I guess Altium probably shouldn't do this by default?</p>"},{"location":"dingboard/","title":"Dingboard","text":"<p>Simple flight computer that uses all the best practices. A good place to start.</p> <p>This board is everything you would want in a passive data collection flight computer. Made for beginner model rockets. Basically a better version of this.</p> November 28"},{"location":"dingboard/#initial-requirements-and-design-goals","title":"Initial Requirements and Design Goals","text":"<p>The primary goal of dingboard is to enable my personal learning. This will be the first board of many. The successor to dingboard will be a CAN enabled system in a 4-inch diameter form factor which will hopefully be launched this summer.</p> <p>Primary Functional Requirements for dingboard:</p> <ul> <li>Easy to operate and understand</li> <li>Fully open source</li> <li>Assemblable by JLCPCB PCBA</li> <li>On board charging and automatic power switching using simple chip</li> <li>Charging status indicators</li> <li>MCU status indicator, sleep, data collection etc.</li> <li>Altium and solidworks integration</li> <li>Utilize all known best practices to enable scalability</li> <li>Components:<ul> <li>Barometer</li> <li>Accelerometer</li> <li>Thermistor for battery protection</li> </ul> </li> <li>Use entire safe range of battery (use a buck boost)</li> <li>Why not go with an ESP?</li> </ul> <p>Here's the link to the Altium project repo</p>"},{"location":"dingboard/#checklist","title":"Checklist","text":"<ul> <li> Altium with GitHub</li> <li> Begin PCB V1</li> <li> Complete board schematic</li> <li> solid works and altium<ul> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> </ul> </li> <li> get proper PCIe dimensions</li> <li> add power switch for battery Forget it i'll just unplug it for this version</li> <li> finish routing<ul> <li> buck boost</li> <li> fuel gauge </li> </ul> </li> <li> add test points</li> <li> add all LCSC designators</li> </ul>"},{"location":"dingboard/#library","title":"Library","text":"<p>I started using the Celestial Altium Library. Install video</p> <p>I finally found a PCIe x1 footprint. edit: should have just made it from scratch. That footprint was garbage, had to redo it.</p>"},{"location":"dingboard/#video-references","title":"Video references","text":"<p>Good videos:</p> <ul> <li> <p>Altium Designer Quick-Start Tutorial with Phil Salmony from Phil's Lab</p> </li> <li> <p>Raspberry Pi RP2040 Hardware Design | Altium Designer | JLCPCB - Phil's Lab #28</p> </li> <li> <p>How To Keep Components Connected When Moving | Altium Designer</p> </li> <li> <p>Microcontroller-Based Hardware Design With Altium Designer - #3 USB C </p> </li> <li> <p>ECAD-MCAD CoDesign with Altium 365 &amp; SOLIDWORKS</p> </li> <li> <p>Types of PCB Grounding Explained | PCB Layout</p> </li> </ul>"},{"location":"dingboard/components/","title":"Components","text":""},{"location":"dingboard/components/#components_1","title":"Components","text":""},{"location":"dingboard/components/#power","title":"Power","text":"<ul> <li> <p>18650 charger datasheet</p> </li> <li> <p>Battery protection circuit</p> </li> <li> <p>Protection IC FET</p> </li> <li> <p>Charing and switching IC: BQ2407</p> </li> <li> <p>\"Fuel guage\"</p> </li> <li> <p>Buck-Boost</p> </li> <li> <p>PCIe Specs PDF (page 92 and 136)</p> </li> </ul>"},{"location":"dingboard/components/#compute","title":"Compute","text":"<ul> <li> <p>MCU: RP 2040, Hardware design guide, datasheet</p> </li> <li> <p>IMU: ICM-42670</p> </li> <li> <p>Barometer: LPS22HH</p> </li> <li> <p>Flash: W25Q128JV</p> </li> <li> <p>LED: Power status indicator</p> </li> </ul>"},{"location":"dingboard/misc-thoughts/","title":"Misc thoughts","text":""},{"location":"dingboard/misc-thoughts/#misc-thoughts","title":"Misc Thoughts","text":"<ul> <li>Using a single MOSFET for switching between USB and battery voltage is just too janky.<ul> <li>Shoot through voltage.</li> <li>The way to do it simply would be by taking advantage of the \"Zero Gate Voltage Drain Current\", but there's a load connected to the source so the voltage probably wont rise</li> <li>In-rush current, you need a resistor to the gate</li> <li>Going to need more robust circuitry than this</li> <li>Could flip the P channel enhancement mosfet to have the current go from source to drain in order to get the negative voltage, but too janky</li> <li>Going with a BQ2407x that handles power switching and battery charging. It's basically designed for this exact thing.</li> </ul> </li> <li> <p>Not using RT9080. Need a buck boost. I should be able to use the entire range of battery</p> </li> <li> <p>Typical via sizes</p> <ul> <li>Large: 0.7 mm pad, 0.3 mm drill</li> <li>Medium: 0.6 mm pad, 0.25 mm drill</li> <li>Small: 0.5 mm pad, 0.2 mm</li> </ul> </li> </ul>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/dingboard/","title":"dingboard","text":""},{"location":"blog/category/agenda/","title":"Agenda","text":""},{"location":"blog/category/complaints/","title":"Complaints","text":""},{"location":"blog/category/info/","title":"Info","text":""},{"location":"blog/page/2/","title":"Latest Posts","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""}]}