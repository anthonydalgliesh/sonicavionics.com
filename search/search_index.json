{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is Zeul's other website for his other documentation and other blog</p> Zeul dingboard 8-bit computer MARS flight computers"},{"location":"avionics/","title":"Dingboard","text":"<p>Avionics for the rocket</p> <p>Maybe I should rename this before it's too late. Actually it's already too late.</p> December 1st: Power Board 0.0.2 December 7th: Avionics bay"},{"location":"avionics/#initial-requirements-and-design-goals","title":"Initial Requirements and Design Goals","text":"<p>The primary goal of dingboard is to enable my personal learning. This will be the first board of many. The successor to dingboard will be a CAN enabled system in a 4-inch diameter form factor which will hopefully be launched this summer.</p> <p>Primary Functional Requirements for dingboard:</p> <ul> <li>Easy to operate and understand</li> <li>Don't be janky</li> <li>Fully open source</li> <li>Assemblable by JLCPCB PCBA</li> <li>Utilize all known best practices to enable scalability</li> </ul> <p>Here's the link to the project repo with the Solidworks and Altium files.</p>"},{"location":"avionics/#checklist-for-power-002","title":"Checklist (for power 0.0.2)","text":"<ul> <li> Altium with GitHub</li> <li> Begin PCB V1</li> <li> Complete board schematic</li> <li> solid works and altium</li> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> <li> get proper PCIe dimensions</li> <li> add power switch for battery Forget it i'll just unplug it for this version</li> <li> finish routing</li> <li> buck boost</li> <li> fuel gauge</li> <li> add test points there are enough exposed connections i can poke at</li> <li> add all LCSC designators</li> <li> double check all connections</li> <li> order from JLC</li> </ul>"},{"location":"avionics/#library","title":"Library","text":"<p>I started using the Celestial Altium Library. Install video</p> <p>I finally found a PCIe x1 footprint. edit: should have just made it from scratch. That footprint was garbage, had to redo it.</p>"},{"location":"avionics/#video-references","title":"Video references","text":"<p>Good videos:</p> <ul> <li> <p>Altium Designer Quick-Start Tutorial with Phil Salmony from Phil's Lab</p> </li> <li> <p>Raspberry Pi RP2040 Hardware Design | Altium Designer | JLCPCB - Phil's Lab #28</p> </li> <li> <p>How To Keep Components Connected When Moving | Altium Designer</p> </li> <li> <p>Microcontroller-Based Hardware Design With Altium Designer - #3 USB C</p> </li> <li> <p>ECAD-MCAD CoDesign with Altium 365 &amp; SOLIDWORKS</p> </li> <li> <p>Types of PCB Grounding Explained | PCB Layout</p> </li> </ul>"},{"location":"avionics/#open-source","title":"Open source","text":"<p>The student rocketry community is quite open to sharing ideas. This makes it easier for new student teams such as my own to build themselves up. The goal is to have a thriving space industry. The bottom line is that the more people we have that are knowledgeable in rocketry the better chance humanity has. This is largely the philosophy the rocketry teams I've spoken to have. This is one reason why MARS strives to open source everything we do. We stand on the shoulders of giants. It is unfeasible to donate to every single open source project you gain knowledge from, so the least we can do is to contribute back the the community by open sourcing everything we do. We have everything to gain from the success of others. Open source doesn't mean copying others stuff, and being a free loader. We strive to learn from and contribute to each step of the process.</p>"},{"location":"avionics/#inspiration","title":"Inspiration","text":"<p>I've been inspired by rocketry teams such as Waterloo, Queens, Etes, and Oronos. Waterloo is extremely helpful due to all of their documentation being public on their website. I've visited Queens a few times and they are always okay with sharing info. Without these two teams, MARS' success would be a lot harder.</p>"},{"location":"avionics/#can-bus","title":"CAN bus","text":"<p>Every team settles on CAN bus. I have no experience with it, but I will be implementing it on dingboard.</p>"},{"location":"avionics/#modularity-with-pcie-connectors","title":"Modularity with PCIe connectors","text":"<p>The modular system I first noticed at LC 2023. Etes showed me their system. I noticed Queens also did it, then I noticed Oronos did it. It seems like an obvious place to start, I mean it makes things really easy and elegant. The downside is that its not as structurally robust as Waterloos RocketCAN system.</p> \u00c9TS Anirniq QRET ORONOS"},{"location":"avionics/#battery","title":"Battery","text":"<p>For the SRAD board we will be using a SRAD battery back and the opposite is true for the COTS stuff. For the first launch it will be a 2s 2p pack inspired by this video.</p>"},{"location":"avionics/cots/","title":"Cots Stuff","text":"<p>The flight computer needs to have redundant consumer off the shelf altitude measurement. Not sure if the COTS GPS is required or suggested.</p>"},{"location":"avionics/cots/#cots-components","title":"COTS Components","text":"<p>GPS</p> <ul> <li>Featherweight 915 MHz</li> <li>BigRedBee COTS GPS</li> </ul>"},{"location":"avionics/misc-thoughts/","title":"Misc thoughts","text":""},{"location":"avionics/misc-thoughts/#misc-thoughts","title":"Misc Thoughts","text":"<ul> <li>Using a single MOSFET for switching between USB and battery voltage is just too janky.</li> <li>Shoot through voltage.</li> <li>The way to do it simply would be by taking advantage of the \"Zero Gate Voltage Drain Current\", but there's a load connected to the source so the voltage probably wont rise</li> <li>In-rush current, you need a resistor to the gate</li> <li>Going to need more robust circuitry than this</li> <li>Could flip the P channel enhancement mosfet to have the current go from source to drain in order to get the negative voltage, but too janky</li> <li>Going with a BQ2407x that handles power switching and battery charging. It's basically designed for this exact thing.</li> <li> <p>Not using RT9080. Need a buck boost. I should be able to use the entire range of battery</p> </li> <li> <p>Typical via sizes</p> </li> <li>Large: 0.7 mm pad, 0.3 mm drill</li> <li>Medium: 0.6 mm pad, 0.25 mm drill</li> <li>Small: 0.5 mm pad, 0.2 mm</li> <li> <p>Make it hole: 0.3 and diameter: 0.4 for no extra charge</p> </li> <li> <p>Vias under pads cost more and cause issues with assembly sometimes. Not worth it.</p> </li> <li> <p>OshPark doesn't do assembly</p> </li> <li> <p>I really am gonna have to choose between using github or the ECAD/MCAD plug in. I think the answer is obvious. Altium 365 is not the way. KiCAD is worth considering switching to. More accessible, free, apparently less professional though. What would a start up use though? Probably KiCAD. I don't know how well it handles multi board projects. I don't even know how Altium handles it though. Should I switch to KiCAD for Dongboard? Queens, and waterloo uses it. It probably has much better git integration although I'd have to look into that. ALtium 365 actually does provide some benefits. You can view stuff in the browser. There's also flux.ai which may or may not be scamming. Solidworks is such a drag but I don't think OnShape is ready. I've had it slow down on me too many times... meh not that many times though. No good FOSS CAD software. </p> </li> <li> <p>Always go on texas instruments' website to check if there is a newer version of the chip</p> </li> <li> <p>Better to use \"point of load\" regulation</p> </li> <li> <p>Will have a multiplexer and on each compute board.</p> </li> <li>3.3v rail, 5v rail, and unregulated 12v rail</li> <li>dingboard just has one regulated 3.3v rail</li> <li> <p>dongboard will have barrel jack on the power board for fast charging with a charging IC, it will also have a rp2040 and a voltage monitoring chip. The UCB-C port won't even have its power terminals connected. It will be just for programming. the barrel or QD will be for charging/power supply while the rocket is on the pad. The CAN bus will also have a QD on it.</p> </li> <li> <p>When I start the MCU I'm gonna say eff Altium 365 and just download everything and re initialize my repo. I'm actually going to make a release for the 0.0.1 power board it will have schematics pictures and the BOM. It's important to keep things open source. It's so easy for things to turn into slop otherwise.</p> </li> <li> <p>Outboard physical connections</p> </li> <li>remove before flight banana pins</li> <li>power/charging</li> <li>for solid: ignition</li> </ul>"},{"location":"avionics/cad/cad/","title":"CAD","text":"<p>This is the page to describe the avionics bay CAD.</p> <p>Version 1: </p> <p>Version 2: </p> <p></p> <p>There's just barely enough space to fit the RFD900 on a module. so why not? The challenge is to see if I can print these over hangs now. Gonna be testing today.</p>"},{"location":"avionics/cad/cad/#bulkheads","title":"Bulkheads","text":"<p>The lower and upper bulk head should be the exact same. The inner diameter between the liquid and solid rocket wont change too much.</p> <p>Tube for solid O.D.: 4.024. I.D.: 3.9, Thickness: 0.062 </p> <p>Liquid</p>"},{"location":"avionics/cad/cad/#rack","title":"rack","text":"<p>The rack will use these threaded inserts</p>"},{"location":"avionics/modules/backplate/","title":"Backplate","text":"<p>pcie socket</p> <p>banana socket order an extra 5/16-32 nut with this</p> <p>cad from here</p> <p>banana plug</p> <p>step file from this website</p>"},{"location":"avionics/modules/power/0.0.2/","title":"0.0.2","text":"<p>This is the power module. 0.0.2 because there was a teeny mix up with JLC.</p> <p> </p>"},{"location":"avionics/modules/power/0.0.2/#002-components","title":"0.0.2 Components","text":"<ul> <li> <p>18650 charger datasheet</p> </li> <li> <p>Battery protection circuit</p> </li> <li> <p>Protection IC FET</p> </li> <li> <p>Charing and switching IC: BQ2407</p> </li> <li> <p>\"Fuel guage\"</p> </li> <li> <p>TPS63001</p> </li> <li> <p>PCIe Specs PDF (page 92 and 136)</p> </li> <li> <p>USBC</p> </li> </ul>"},{"location":"avionics/modules/power/0.0.2/#bom","title":"BOM","text":"Comment Designator Footprint LCSC Part Number JLCPCB Basic? 0.01Ohm R11 1206 C844910 no 0.1uF C1 0402 C1525 yes 1M R2, R4 0402 C26083 yes 1uF C5, C7 0402 C52923 yes 1uH L2 1008 C882955 no 1.5K R5, R7 0402 C25867 yes 1.8K R8 0603 C4177 yes 2.2K R3 0402 C25879 yes 3K R16 0603 C4211 yes 3.3K R1 0402 C25890 yes 4.7uF C6, C8 0402 C23733 yes 5.1K R12, R13 0402 C25905 yes 10K R6, R14, R15 0402 C25744 yes 22uF C9 0603 C59461 yes 47uF C10 0805 C16780 yes 91K R18 0402 C1161 no 470nF C4 0603 C1623 yes 510K R17 0603 C23192 yes Battery Monitor U4 SON-12-EP(2.5x4) C473397 no Battery Protection IC U1 WSON (6) C183096 no Buck-Boost U5 SOT-583 C5219190 no Charger/Switcher U2 VQFN (16) C140288 no FET Q1, Q2 VSON-8(3.3x3.3) C2861720 no JST Connector P1 SMD,P=2mm C295747 no PCIe Gold Fingers J2 nan nan nan Red LED D1 0603 C2286 yes USB-C J1 nan nan nan White LED D2 0603 C2290 yes"},{"location":"avionics/modules/power/0.1.0/","title":"0.1.0","text":"<p>I haven't started 0.1.0 yet but I want to keep track of some ideas.</p>"},{"location":"avionics/modules/power/0.1.0/#ics","title":"ICs","text":"<ul> <li> <p>Charging IC</p> <ul> <li>TI 1s to 3s charger and power path selector</li> </ul> </li> <li> <p>Power indicator</p> </li> <li> <p>Buck-Boost Converter  or this Buck-boost: TPS63070  or this </p> </li> </ul>"},{"location":"avionics/modules/recovery/","title":"Recovery Module","text":"<p>This board will be in charge of checking continuity, and arming the ejection charges. it will report on tall this over the CAN network. It will also have it's own barometer for independency. We will be able to turn on or off automatic ejection. If the rocket target altitude is lower than expected, the sensor board will alert us, and the </p> <p>There will be remove before flight tags in the form of banana connectors with a tag on it  </p> <p>The above will disable a relay by shorting the enable pin.</p>"},{"location":"avionics/modules/sensors/","title":"Sensor Module","text":"<ul> <li> <p>MCU: RP 2040, Hardware design guide, datasheet</p> </li> <li> <p>IMU: ICM-42670</p> </li> <li> <p>Barometer: LPS22HH</p> </li> <li> <p>Flash: W25Q128JV</p> </li> <li> <p>LED: Power status indicator</p> </li> <li> <p>GPS blox m10q</p> </li> </ul>"},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/12/01/two-weeks-update/","title":"Two Weeks Update","text":"<p>It's been two weeks since I started dingboard. I just ordered it for assembly with JLCPCB I used USP express saver shipping. Hopefully I don't have to pay any more fees when it arrives. It cost $80.75. I got 5 boards. They don't have USB-C connectors in stock so I'm getting them off digikey.</p>"},{"location":"blog/2024/12/02/december-2/","title":"December 2","text":"<p>Gonna start work on the avionics bay . I think I'm stuck to using Altium and Solidworks now.</p>"},{"location":"blog/2024/12/01/dingboard-is-nextboard/","title":"dingboard is Nextboard","text":"<p>Well I named the dingboard the dingboard because I thought I was gonna make a bigger board later on and I was gonna name it the dongboard or some shit. There's no value in making a single board flight computer right now, so the MCU will be CAN enabled from the get go. It doesn't add much complexity. The MCU board will be ran at 3 volts so I will be able to use the V1 power board for it. Later on I'll need to use an antenna which will be ran at 5v with 3.3v logic. So while power v1 is shipping, I'll work on the MCU with CAN, while that is being shipped I'll upgrade the power to 3s with 3.3v 5v and unregulated 12v. Then I'll work on the antenna module while that is shipping then I'll work on the GPS while that is shipping then blah blah. The specifics will change but this is the idea.</p>"},{"location":"blog/2024/12/07/avionics-bay-cad/","title":"Avionics Bay CAD","text":"<p>Wow, the CAD for the avionics bay took a little longer than I expected. I had to make everything easily modifiable, so I used variables for almost every dimension. With the change of a couple numbers in a text file I can go from this:</p> <p></p> <p>to this</p> <p></p> <p>This is a fun avionics layout. I think it's kinda fun how they all slot into a PCIe CAN bus. 3D printing this is gonna be weird. I could also go with this design, but I think the first one is more fun.</p> <p></p> <p>The thing about this avionics system, is that once the board dimensions are made, there's no going back. </p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/","title":"KiCAD vs Altium and Solidworks vs OnShape","text":"<p>Gotta pick which software to use. Most teams use KiCAD and Solidworks.</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#kicad-vs-altium","title":"KiCad vs Altium","text":"<p>5 minutes into KiCAD. Here's the pros and cons of KiCAD. One downside already is no dark mode support on windows</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros","title":"Pros","text":"<ul> <li>There seems to be a much better built in library. Well it has PCIe footprints.</li> <li>I don't have to sign in and click roam on the licenses all the time. </li> <li>There's a plentiful plugs ins repo. </li> <li>It's way way faster</li> <li>Dark mode for schematic editor.</li> <li>FOSS</li> <li>Altium's manufacturer part search is really not that fast, and for whatever reason the BOM is the slowest thing in the world. There's few companies that would use the build in supply chain shit, it just slow things down and I didn't see a way to disable it without disabling the manufacturer part search.</li> <li>Many different repos for all the manufactures design rules. </li> <li>Exporting is way faster with the JLCPCB plug in</li> <li>The measurement tool is slightly better</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons","title":"Cons","text":"<ul> <li>The UI is somewhat less professional looking. (who cares)</li> <li>KiCAD doesn't have dark mode on windows. Altium's UI is dark by default, but I don't think you can add themes for the actual schematic editor. So that's </li> <li>Altium actually has better git integration surprisingly.</li> <li>You can only have one project open per instance. <code>open -n /Applications/KiCad/kicad.app</code></li> <li>I've experienced more crashes than Altium. Running tally of crashes: 7</li> <li>Sometimes the footprints don't show up in the previewer windows when selecting a chip</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#solidworks-vs-onshape","title":"Solidworks vs OnShape","text":"<p>I'll do pros and cons of Solidworks</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros_1","title":"Pros","text":"<ul> <li>Faster </li> <li>Realview graphics</li> <li>Can handle assembly as large as your computer will allow. OnShape is run in AWS. I didn't think this would be an issue, because they dynamically allocate compute based on your needs. Even still, it is really slow loading things, and I did notice that after a while it gets faster the more you use it, but still its much slower than Solidworks.</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons_1","title":"Cons","text":"<ul> <li>Very old looking interface </li> <li>Have to update variable file reference manually every time you add a variable. </li> <li>No version control, although OnShape has it but doesn't use git.</li> <li>Mating in OnShape is faster, the same thing that takes one mate in OnShape takes 2 or 3 in Solidworks.</li> <li>Only runs on windows, OnShape is really great for how it runs in the browser. I would do almost anything to never have to use windows again, but onshape is just too slow.</li> <li>Very expensive for companies, onshape has a free tier for open source people.</li> <li>The workflow with Solidworks involves using sharepoint or something similar. The files will get too large for regular git so LFS will be needed.</li> </ul>"},{"location":"blog/2024/12/04/solidworks-is-fucked/","title":"Solidworks is fucked","text":"<p>Why is Solidworks so fucked. It keeps flickering between these views:</p> <p></p> <p></p> <p>I've had so many glitches. I've ran the import diagnostics on the PCIe step it says its fine. I did... do the workaround to get my 3070ti working. Although this happens with realview on or off. </p>"},{"location":"blog/2024/11/15/init/","title":"Init","text":"<p>I'm starting a new website. Getting tired of my php site.</p> <p>I noticed my school is behind compared to other schools. I plan on getting us up to speed, while at the same time learning as much as possible. The end goal is making a rocket that can compete with waterloo's borealis. If all goes right, we'd launch it at LC 2026. This year (LC 2025), the goal is to make a mojave spinx esque rocket. I'm going to start off with recovery, and avionics. The reason being, is that it is possible to launch the same avionics in a 4 inch diameter kit rocket, that we could use in a mojave sphinx. The recovery system will be almost the exact same. </p> <p>The first thing I'm gonna do is make a very simple board in Altium. It will have the rp 2040, a usbc port, flash, a LED, reset button, pin out, USB over current protection, a barometer and an accelerometer. It'll be a bit better than a pico.</p>"},{"location":"blog/2024/11/16/nov-16th/","title":"Nov 16th","text":"<p>Agenda for today:</p> <ul> <li> Altium with GitHub</li> <li> Altium with Solidworks</li> <li> Begin dingboard</li> </ul>"},{"location":"blog/2024/11/17/nov-17th/","title":"Nov 17th","text":"<p>Learnt about mosfets</p>"},{"location":"blog/2024/11/18/nov-18th/","title":"Nov 18th","text":"<p>Learnt that I shouldn't just use a mosfet since there's power switching/charging ICs</p>"},{"location":"blog/2024/11/19/nov-19th/","title":"Nov 19th","text":"<p>Considering ordering the power board on its own for now. The only issue is the wait time. Could continue with 6502 stuff until then or work on the CPU board. </p> <p>Here's the current check list of things to implement:</p> <ol> <li> Battery protection IC</li> <li> Charging IC</li> <li> Buck-boost</li> </ol>"},{"location":"blog/2024/11/26/nov-26th/","title":"Nov 26th","text":"<p>Agenda:</p> <ul> <li> solid works and altium<ul> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> </ul> </li> <li> get proper PCIe dimensions</li> <li> add power switch for battery forget it i'll just unplug it for this version</li> <li> finish routing</li> <li> add test points</li> <li> add all LCSC designators</li> </ul> <p>This is not going to be a CAN enabled board. The gold fingers are for practice, and modularity. The only reason it's not the next board already is because I choose 1S for the battery for simplicity. Might have been better to just make the full board from the get go. but since I'll have to go to 3S I should just to the CAN stuff when I do that.</p> <p>if time:</p> <ul> <li>add table of contents to menu if it doesn't work make open an issue</li> <li>make tables have divisions </li> </ul>"},{"location":"blog/2024/11/29/annoyed-at-altium-still/","title":"Annoyed at Altium Still","text":"<p>So to use ECAD/MCAD you have to use Altium 365. It makes it's own .git file in the main Altium directory. So you could still have a .git in the directory above it which you could push to github as a primary thing. Then you could just push to the Altium 365 whenever you want to use MCAD. The ECAD/MCAD integration just doesn't seem worth the hassle though. Being able to move around components in MCAD does seem really cool though. I just wish they did it right. Engineering tools are never designed by good software engineers. The software engineers that make it never really use it. The best stuff is made by the people that use the thing. git is so good because the people that maintain it are the people that use it. I love that shit that's like \"made by blank for blank.\" Usually it's shampoo or something, but when it's actually true the product is good.</p> <p>When I pushed my project to Altium 365 it copied my project to a new location on my computer. So I've been making all these changes to a separate repo this whole time. So to continue using the old repo, I'd have to delete the old files and add the new files, reinitializing the repo basically. Because the Altium files are all binaries. I hate Altium.</p> <p>At some point I switched the buck boost to a linear regulator/boost. Idk how that happened now I gotta switch it back.</p>"},{"location":"blog/2024/11/25/altium-complaints/","title":"Altium Complaints","text":"<p>.lia files are fully broken in Altium. You literally just can't import them anymore.</p> <p>There's this nice PCIe template I want to use, but circuit maker is effed. Why are they even trying to keep circuit maker alive? It's fully broken because it wants you to sign in with a name and password but you can only use google to sign up in the browser and there's no option to change your password anywhere. </p> <p>There used to be a template libary?. Now all the \"design content\" links redirect to octopart which doesn't seem to have templates like the design content. https://designcontent.live.altium.com/#Search/pcie</p> <p>The license manager has to be one of the most annoying things known to man. Every now and then you start up Altium and you have to click \"release\" then roam on three licenses because it thinks you're signed in somewhere else.</p> <p>Altium, Solidworks and Onshape have different methods of rotation. </p> <p>Onshape is clearly the best, pan zoom and rotate are all done without a modifier. It's just constrained rotate which uses shift. I don't think solidworks even has that though.</p> <p>Altium is the worst is uses track ball rotation which inherently requires more clicks.</p> <p>Matt Keeter // 3D Rotation Design</p> <p>Everying time I paste a JLCPCB part number into the BOM the entire software freezes for a good 20 seconds. </p>"},{"location":"blog/2024/11/26/ecadmcad-ideal-version-control-workflow/","title":"ECAD/MCAD Ideal Version Control Workflow","text":"<p>Here's some ideas for how Solidworks and Altium or any MCAD and ECAD would ideally work together. </p> <p>Altium codesigner is for use with Altium 365 only.  Solidworks doesn't have branching and merging. It's proprietary version control method is rubbish.</p> <p>Ideally, you'd have a MCAD and a ECAD repo. Both of them use each other as submodules. Or you could just have the one repo with RBAC but I don't think github lets you do that because it would be annoying if you commit to a file you don't have perms for then try to push it it would say nope bruh you can't change that one file in all your files you changed. Actually that doesn't sound so bad </p> <p>MCAD pulls to the ECAD submodule. Changes are made to the PCB, a pull request is made, the electrical engineer accepts them. Then the rest of the MCAD team pulls from the ECAD repo and has access to the new changes. There should be some features like board shape, and max component height that the MCAD engineer has control of that a pull request is required to make. That would be what the submodule </p> <p>Maybe there would just be a third repo for things that both teams depend on. This would only be the board dimensions. Both the ECAD and MCAD softwares should be able to edit it, but there should be accept/deny system where an engineer from both teams need to approve the change.  The ECAD team doesn't want to see the rest of the structure they only care about the PCB.</p> <p>Sometimes you'd want the MCAD team designing an enclosure as a secondary to the PCB layout, sometimes there's board constraints sizes like in a rocket which makes the MCAD designers primary.  Three sort of use cases: Primary MCAD, primary ECAD, and equal priority</p> <p>There would need to be a system for breaking changes. There needs to be keep out regions, and expected layouts. </p> <p>I would like for right now, to be able to push a board layout, a rough layout, to the board dimensions/connectors repo. This contains the gold fingers, USB and JST connectors. This is an initial push so it doesn't require both team's approval. Next I want to go into solidworks, move around the gold fingers, change the board diameter, lets say shrink it. Then I push to the dimensions/connectors repo. A pop up on Altium appears, it says \"a change has been proposed\". Then it says would you like to branch to check approvability? I finish my changes to the ECAD before I then branch the ECAD repo. This special branch pulls changes proposals from the dimensions/connectors repo. Then I look around to see if I can rework the PCB a bit to allow the changes. I rework the pcb a bit then accept the changes. I merge back the ECAD branch to main. The new main has a different git hash has associated with the dimensions/connectors submodule. </p> <p>Anyways there's some spit balling about an ideal version control ECAD/MCAD workflow. I don't think this can be done with kicad or some open source cad software. The two softwares would need to agree on a system for the dimensions/connectors files. And it's probably best the two softwares are kept separate. </p> <p>So you can use workarounds to avoid using Altium 365, but you loose too much convenience for it to be worth it. You'd have to keep exporting to a STEP in altium then in solid works you'd have to export to a DXF then in Altium import that to be the board shape.</p>"},{"location":"blog/2024/11/20/nov-20th/","title":"Nov 20th","text":"<p>Current progress:</p> <p></p> <p>The hardest part was definitely the component selection. I read through so many data sheets. Maybe I can get the rest of the board done tomorrow?! Then I can go relax with some 6502 stuff for a bit.</p> <p>Tomorrow:    - MCU schematic   - PCB layout   - Verify design for PCBA</p>"},{"location":"blog/2024/11/21/nov-21th/","title":"Nov 21th","text":"<p>Added a battery \"fuel guage\" it gives you an accurate reading of the battery level over I2C</p> <p></p> <p>I started the PCB </p>"},{"location":"blog/2024/11/24/jlcpcb-and-altium-design-rules-issues/","title":"JLCPCB and Altium Design Rules Issues","text":"<p>JLCPCB \"PCB Manufacturing &amp; Assembly Capabilities\" is kinda confusing.</p> <p>So for a two layer PCB,</p> <p></p> <p>it says \"2-layer: 0.15mm hole size / 0.25mm via diameter.\" That would mean the pad width or \"annular ring\" can be 0.05mm right? </p> \\[ \\frac{0.25}{2} - \\frac{0.15}{2} = 0.05 \\] <p>but wait: </p> <p>Now it says: \"2-layer: 1 oz: Recommended 0.25 mm or above; absolute minimum 0.18 mm.\" </p> <p>I guess a via doesn't count as a PTH (Plated Through Hole)?</p> <p>By default in Altium you set your minimum annular ring:  and this applies to vias and PTH. So... I guess Altium probably shouldn't do this by default?</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/dingboard/","title":"dingboard","text":""},{"location":"blog/category/complaints/","title":"complaints","text":""},{"location":"blog/category/agenda/","title":"Agenda","text":""},{"location":"blog/category/info/","title":"Info","text":""},{"location":"blog/page/2/","title":"Latest Posts","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/category/dingboard/page/2/","title":"dingboard","text":""}]}